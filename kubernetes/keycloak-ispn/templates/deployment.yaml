apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "keycloak-ispn.fullname" . }}-keycloak
  labels:
    {{- include "keycloak-ispn.labels" . | nindent 4 }}
spec:
  {{- if not .Values.kc.autoscaling.enabled }}
  replicas: {{ .Values.kc.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "keycloak-ispn.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: keycloak
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "keycloak-ispn.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: keycloak
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "keycloak-ispn.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: keycloak
          command:
            - /bin/sh
            - -c
            - |
              if [[ -f /vault/secrets/env ]]; then
                echo "$(date) - Loading environment secrets from Vault"
                source /vault/secrets/env
              fi
              /opt/keycloak/bin/kc.sh $@
          args:
            - --config-file=/opt/keycloak/conf/keycloak.conf
            - start
            - --optimized
            - --import-realm
            - --spi-connections-infinispan-quarkus-site-name={{ include "keycloak-ispn.fullname" . }}
            - --hostname-strict=false
          env:
            - name: KC_PROXY
              value: "edge"
            - name: KC_METRICS_ENABLED
              value: "true"
            - name: KC_PERSISTENT_SESSIONS
              value: "true"
            - name: KC_REMOTE_STORE_HOST
              value: "{{ include "keycloak-ispn.fullname" . }}-ispn-headless"
            - name: KC_REMOTE_STORE_PORT
              value: "11222"
            {{- toYaml .Values.kc.podEnv | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.kc.image.repository }}:{{ .Values.kc.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.kc.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.kc.service.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          resources:
            {{- toYaml .Values.kc.resources | nindent 12 }}
          volumeMounts:
            - name: realms-config
              mountPath: /opt/keycloak/data/import/
              readOnly: true
      volumes:
        - name: realms-config
          configMap:
            name: {{ include "keycloak-ispn.fullname" . }}-imported-realms
      {{- with .Values.kc.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kc.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.kc.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
