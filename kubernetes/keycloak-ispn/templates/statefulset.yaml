apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "keycloak-ispn.fullname" . }}-ispn
  labels:
    {{- include "keycloak-ispn.labels" . | nindent 4 }}
spec:
  serviceName: "{{ include "keycloak-ispn.fullname" . }}-ispn-headless"
  replicas: {{ .Values.ispn.replicaCount }}
  selector:
    matchLabels:
      {{- include "keycloak-ispn.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: infinispan
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "keycloak-ispn.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: infinispan
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "keycloak-ispn.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: infinispan
          image: "{{ .Values.ispn.image.repository }}:{{ .Values.ispn.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.ispn.image.pullPolicy }}
          command: [ "sh", "-c" ]
          args:
            - |
              if [[ -f /vault/secrets/env ]]; then
                echo "$(date) - Loading environment secrets from Vault"
                source /vault/secrets/env
              fi
              touch /opt/infinispan/identities-batch
              {{- if .Values.ispn.identitiesBatch }}
              cat /opt/infinispan/identities-batch-secret >> /opt/infinispan/identities-batch && echo "" >> /opt/infinispan/identities-batch
              {{- end }}
              echo "user create ${ISPN_ADMIN} -p ${ISPN_ADMIN_PASSWORD} -g admin" >> /opt/infinispan/identities-batch
              /opt/infinispan/bin/launch.sh -Dinfinispan.cluster.stack=kubernetes -Djgroups.dns.query="{{ printf "%s-ispn-ping.%s" (include "keycloak-ispn.fullname" .) .Release.Namespace }}" -Dinfinispan.deserialization.allowlist.classes=java.time.Instant,org.keycloak.cluster.infinispan.WrapperClusterEvent -Dinfinispan.deserialization.allowlist.regexps=.*
          ports:
            - name: hotrod
              containerPort: 11222
              protocol: TCP
          env:
            - name: IDENTITIES_BATCH
              value: "/opt/infinispan/identities-batch"
            {{- toYaml .Values.ispn.podEnv | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /rest/v2/container/health/status
              port: hotrod
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 20
          startupProbe:
            httpGet:
              path: /rest/v2/container/health/status
              port: hotrod
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 20
          volumeMounts:
            - name: data
              mountPath: /opt/infinispan/data
            {{- if .Values.ispn.identitiesBatch }}
            - name: identities-batch
              mountPath: /opt/infinispan/identities-batch-secret
              subPath: identities-batch
            {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.ispn.resources | nindent 12 }}
      {{- if .Values.ispn.identitiesBatch }}
      volumes:
        - name: identities-batch
          secret:
            secretName: {{ include "keycloak-ispn.fullname" . }}-identities-batch
      {{- end }}
      {{- with .Values.ispn.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ispn.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.ispn.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data
        labels:
          {{- include "keycloak-ispn.labels" . | nindent 8 }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.ispn.storage.size }}
